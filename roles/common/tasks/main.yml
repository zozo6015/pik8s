---
- name: configure ansible hostname
  hostname:
    name: "{{ inventory_hostname }}"

- name: upgrade the apt servers
  apt:
    update_cache: true
    upgrade: full

- name: install python3-apt package
  shell: apt install -y python3-apt


- name: Copy the modules configs
  copy:
    src: k8s.conf
    dest: /etc/modules-load.d/k8s.conf

- name: enable kernel modules
  modprobe: 
    name: '{{ item }}'
    state: present
  loop:
    - overlay
    - br_netfilter

- name: Copy sysctl config file
  copy:
    src: kubernetes.conf
    dest: /etc/sysctl.d/kubernetes.conf

- name: load sysctl config
  shell: sysctl --system

- name: enable cgroup memory on raspberry pi
  block:
    - name: read the content of the cmdline.txt
      shell: cat /boot/firmware/cmdline.txt
      register: cmdline
      when: ansible_architecture == "aarch64"

    - debug: var=cmdline
      when: ansible_architecture == "aarch64"

    - name: write new cmdline
      lineinfile:
        path: /boot/firmware/cmdline.txt
        regex: '^dwc_otg.lpm.*'
        line: '{{ cmdline.stdout }} cgroup_enable=memory cgroup_memory=1'
        state: present
      when: ansible_architecture == "aarch64" and not cmdline.stdout is search("cgroup_enable")

- name: install necesarry packages
  apt:
    name: ['apt-transport-https', 'ca-certificates', 'curl', 'gnupg-agent', 'software-properties-common', 'nfs-common', 'netfilter-persistent', 'lvm2']
    state: present
    update_cache: yes

- name: Generate hosts entry to /etc/hosts
  template: 
    src: hosts.j2
    dest: /etc/hosts

#- name: Generate hostname
#  shell: hostname
#  register: hostname

#- name: add hostname private ip mapping to /etc/hosts
#  lineinfile:
#    path: /etc/hosts
#    regexp: '{{ hostname.stdout }}'
#    line: '{{ hosts.stdout }}'
#    state: present
#  
